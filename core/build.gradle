plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'antlr'
//    id 'java'
//    id 'idea'
}

dependencies {
    def graalvmVersion = "1.0.0-rc9"
    def antrlVersion = "4.7.1"

    antlr "org.antlr:antlr4:${antrlVersion}"

    annotationProcessor "org.graalvm.truffle:truffle-dsl-processor:${graalvmVersion}"
    // The processor needs to be on the classpath for IDEA to discover it.
    // We might be able to instead add the Gradle output path after
    // https://github.com/gradle/gradle/issues/4956 is resolved
    implementation "org.graalvm.truffle:truffle-dsl-processor:${graalvmVersion}"

    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile "org.graalvm.truffle:truffle-api:${graalvmVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Not just testCompile, for testing tools in main tree.
    compile "junit:junit:4.12"
    compile 'org.hamcrest:hamcrest-library:1.3'
}

compileJava {
    // Move annotation-processor generated sources outside the build/classes directory
    // See https://github.com/gradle/gradle/issues/4956
    String genSrcPath = "build/generated-src/java/main"
    sourceSets.main.java { srcDir genSrcPath }
    File generatedSourceDir = project.file(genSrcPath)
    project.mkdir(generatedSourceDir)
    options.annotationProcessorGeneratedSourcesDirectory = generatedSourceDir
    outputs.dir(generatedSourceDir)
}

compileKotlin.dependsOn(generateGrammarSource)

// ANTLR parameters
generateGrammarSource {
    //outputDirectory = project.file("build/generated/antlr/main")
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
}
